apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2020-02-19T08:03:04Z"
  generateName: vault-
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/name: vault
    component: server
    controller-revision-hash: vault-6dd78bdd57
    helm.sh/chart: vault-0.3.3
    statefulset.kubernetes.io/pod-name: vault-0
  name: vault-0
  namespace: kube-system
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: vault
    uid: 29046714-46b1-4081-ba39-28097db5c4a7
  resourceVersion: "3508797"
  selfLink: /api/v1/namespaces/kube-system/pods/vault-0
  uid: 44c518b0-1d0f-4218-adf9-ec1e770063ef
spec:
  containers:
  - env:
    - name: HOST_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.hostIP
    - name: POD_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
    - name: VAULT_ADDR
      value: http://127.0.0.1:8200
    - name: VAULT_API_ADDR
      value: http://$(POD_IP):8200
    - name: SKIP_CHOWN
      value: "true"
    - name: SKIP_SETCAP
      value: "true"
    - name: VAULT_DEV_ROOT_TOKEN_ID
      value: root
    image: vault:1.3.1
    imagePullPolicy: IfNotPresent
    lifecycle:
      preStop:
        exec:
          command:
          - /bin/sh
          - -c
          - kill -SIGTERM $(pidof vault)
    name: vault
    ports:
    - containerPort: 8200
      name: http
      protocol: TCP
    - containerPort: 8201
      name: internal
      protocol: TCP
    - containerPort: 8202
      name: replication
      protocol: TCP
    readinessProbe:
      exec:
        command:
        - /bin/sh
        - -ec
        - vault status -tls-skip-verify
      failureThreshold: 2
      initialDelaySeconds: 5
      periodSeconds: 3
      successThreshold: 1
      timeoutSeconds: 5
    resources: {}
    securityContext:
      capabilities:
        add:
        - IPC_LOCK
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: vault-token-zv868
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: vault-0
  nodeName: docker-desktop
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    runAsUser: 100
  serviceAccount: vault
  serviceAccountName: vault
  subdomain: vault
  terminationGracePeriodSeconds: 10
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: vault-token-zv868
    secret:
      defaultMode: 420
      secretName: vault-token-zv868
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2020-02-19T08:03:04Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2020-02-19T08:03:04Z"
    message: 'containers with unready status: [vault]'
    reason: ContainersNotReady
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2020-02-19T08:03:04Z"
    message: 'containers with unready status: [vault]'
    reason: ContainersNotReady
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2020-02-19T08:03:04Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - image: vault:1.3.1
    imageID: ""
    lastState: {}
    name: vault
    ready: false
    restartCount: 0
    state:
      waiting:
        message: Back-off pulling image "vault:1.3.1"
        reason: ImagePullBackOff
  hostIP: 192.168.65.3
  phase: Pending
  podIP: 10.1.4.30
  qosClass: BestEffort
  startTime: "2020-02-19T08:03:04Z"
